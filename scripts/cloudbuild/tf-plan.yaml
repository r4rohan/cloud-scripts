steps:
- id: 'Terraform Initialize'
  name: 'hashicorp/terraform:1.0.0'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: sh
  args:
    - -c
    - |
      ls -la && pwd
      terraform init
      terraform get

- id: 'Terraform Format and Validate'
  name: 'hashicorp/terraform:1.0.0'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: sh
  args:
    - -c
    - |
      ls -la && pwd
      terraform fmt -recursive -check -diff
      terraform validate

- id: 'Terraform Plan with output file'
  name: 'hashicorp/terraform:1.0.0'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: sh
  args:
    - -c
    - |
      ls -la && pwd
      if [ -f "tf_plan" ]; 
        then
          rm "tf_plan"
      fi
      terraform plan -out "tf_plan"
      ls && pwd

- id: 'Push Terraform Output file to JFrog Artifactory'
  name: 'docker.bintray.io/jfrog/artifactory-pro:latest'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
    jf rt upload /workspace/scripts/cloudbuild/gce-tf/tf_plan https://cloudorbit.jfrog.io/artifactory/tf-artifact-generic-local/tf/ --sync-deletes="https://cloudorbit.jfrog.io/artifactory/tf-artifact-generic-local/tf/tf_plan"
