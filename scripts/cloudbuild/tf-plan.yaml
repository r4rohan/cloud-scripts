steps:
- id: 'Terraform Initialize'
  name: 'hashicorp/terraform:1.0.0'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: sh
  args:
    - -c
    - |
      ls -la && pwd
      terraform init
      terraform get

- id: 'Terraform Format and Validate'
  name: 'hashicorp/terraform:1.0.0'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: sh
  args:
    - -c
    - |
      ls -la && pwd
      terraform fmt -recursive -check -diff
      terraform validate

- id: 'Terraform Plan with output file'
  name: 'hashicorp/terraform:1.0.0'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: sh
  args:
    - -c
    - |
      ls -la && pwd
      if [ -f "tf_plan" ]; 
        then
          rm "tf_plan"
      fi
      terraform plan -out "tf_plan"
      ls && pwd

- id: 'Push Terraform Output file to JFrog Artifactory'
  name: 'docker.bintray.io/jfrog/artifactory-cpp-ce'
  dir: 'scripts/cloudbuild/gce-tf'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
    ls -la && pwd
    curl -H "${_JFROG_API}" -T tf_plan "${_JFROG_ARTIFACTORY_URL}/tf/tf_plan"

- id: 'Publish message to PubSub topic'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: bash
  args:
  - -c
  - |
    gcloud pubsub topics publish ${_PUBSUB_TOPIC} --message='"Build Succes"'
